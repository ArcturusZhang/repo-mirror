parameters:
  SOURCE_REPO: $(Build.Repository.Uri)
  SOURCE_BRANCH: $(Build.SourceBranchName)
  TARGET_ENDPOINTS: ''

jobs:
  - job: MirrorRepo
    variables:
      skipComponentGovernanceDetection: true
    displayName: Mirror Branch ${{ parameters.SOURCE_BRANCH }}
    steps:
    - checkout: none
      clean: resources
      persistCredentials: true
    - script: |
        EXIT_CODE=0
        trap "EXIT_CODE=-1" ERR

        env | sort
        echo

        set -x

        SOURCE_REPO=${{ parameters.SOURCE_REPO }}
        SOURCE_BRANCH=${{ parameters.SOURCE_BRANCH }}
        TARGET_ENDPOINTS='${{ parameters.TARGET_ENDPOINTS }}'

        git init
        git config user.email "azuresdkci@microsoft.com"
        git config user.name "azuresdkci"
        git config credential.helper store
        echo https://$(github-pat):x-oauth-basic@github.com > ~/.git-credentials
        git remote add source $SOURCE_REPO
        git fetch source $SOURCE_BRANCH
        git checkout -b source_branch source/$SOURCE_BRANCH

        set +x
        echo

        for TARGET in $TARGET_ENDPOINTS
        do
          TARGET_REPO=`echo $TARGET | cut -d! -f 1 -`
          TARGET_BRANCH=`echo $TARGET | cut -d! -f 2 -`
          echo "TARGET_REPO=$TARGET_REPO"
          echo "TARGET_BRANCH=$TARGET_BRANCH"

          [[ $TARGET_BRANCH == $SOURCE_BRANCH ]] || {
            echo "Skip syncing branch $TARGET_BRANCH"
            continue;
          }

          set -x

          git checkout source_branch
          git reset --hard source/$SOURCE_BRANCH
          git remote add target $TARGET_REPO

          ( git fetch target $TARGET_BRANCH && git checkout -b target_branch target/$TARGET_BRANCH ) || {
            git checkout -b target_branch
          }
          git checkout source_branch
          git rebase -Xours --root target_branch || {
            echo "Failed to rebase!" >&2
            EXIT_CODE=2
            git reset --hard target/$TARGET_BRANCH
          }
          git status
          git push -f target target_branch:refs/heads/$TARGET_BRANCH
          git checkout source_branch
          git branch rm target_branch

          git remote remove target

          set +x
          echo
        done

        exit $EXIT_CODE

